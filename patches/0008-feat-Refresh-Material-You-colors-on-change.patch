From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: 1fexd <PGFvy85nC@protonmail.com>
Date: Sun, 21 May 2023 20:34:44 +0200
Subject: [PATCH] feat: Refresh Material You colors on change


diff --git a/app/src/main/kotlin/dev/patrickgold/florisboard/ime/theme/ThemeManager.kt b/app/src/main/kotlin/dev/patrickgold/florisboard/ime/theme/ThemeManager.kt
index ef6b35a5..9811616e 100644
--- a/app/src/main/kotlin/dev/patrickgold/florisboard/ime/theme/ThemeManager.kt
+++ b/app/src/main/kotlin/dev/patrickgold/florisboard/ime/theme/ThemeManager.kt
@@ -50,6 +50,7 @@ import dev.patrickgold.florisboard.lib.io.ZipUtils
 import dev.patrickgold.florisboard.lib.snygg.SnyggStylesheet
 import dev.patrickgold.florisboard.lib.snygg.SnyggStylesheetJsonConfig
 import dev.patrickgold.florisboard.lib.snygg.ui.solidColor
+import dev.patrickgold.florisboard.lib.snygg.value.MaterialYouColor
 import dev.patrickgold.florisboard.lib.snygg.value.SnyggSolidColorValue
 import dev.patrickgold.florisboard.lib.util.ViewUtils
 import kotlinx.coroutines.CoroutineScope
@@ -119,6 +120,7 @@ class ThemeManager(context: Context) {
      */
     fun updateActiveTheme(action: () -> Unit = { }) = scope.launch {
         activeThemeGuard.withLock {
+            MaterialYouColor.resetColorSchemeCache()
             action()
             previewThemeInfo?.let { previewThemeInfo ->
                 _activeThemeInfo.postValue(previewThemeInfo)
diff --git a/app/src/main/kotlin/dev/patrickgold/florisboard/lib/snygg/value/SnyggMaterialYouValue.kt b/app/src/main/kotlin/dev/patrickgold/florisboard/lib/snygg/value/SnyggMaterialYouValue.kt
index 5156618a..1c239619 100644
--- a/app/src/main/kotlin/dev/patrickgold/florisboard/lib/snygg/value/SnyggMaterialYouValue.kt
+++ b/app/src/main/kotlin/dev/patrickgold/florisboard/lib/snygg/value/SnyggMaterialYouValue.kt
@@ -73,25 +73,28 @@ object MaterialYouColor {
     const val lightColorName = "dynamic-light-color"
     const val darkColorName = "dynamic-dark-color"
 
-    private lateinit var lightColorScheme: ColorScheme
-    private lateinit var darkColorScheme: ColorScheme
+    private var lightColorScheme: ColorScheme? = null
+    private var darkColorScheme: ColorScheme? = null
 
     private fun getAndCacheColorScheme(context: Context, dark: Boolean): ColorScheme {
         return if (dark) {
-            if (!this::darkColorScheme.isInitialized) {
+            if (darkColorScheme == null) {
                 darkColorScheme = dynamicDarkColorScheme(context)
             }
-
-            darkColorScheme
+            darkColorScheme!!
         } else {
-            if (!this::lightColorScheme.isInitialized) {
+            if (lightColorScheme == null) {
                 lightColorScheme = dynamicLightColorScheme(context)
             }
-
-            lightColorScheme
+            lightColorScheme!!
         }
     }
 
+    fun resetColorSchemeCache() {
+        lightColorScheme = null
+        darkColorScheme = null
+    }
+
     const val primary = "primary"
     private const val onPrimary = "onPrimary"
     private const val primaryContainer = "primaryContainer"
-- 
2.41.0

